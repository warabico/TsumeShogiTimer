{"version":3,"sources":["components/hooks/AudioHook.tsx","components/hooks/QuizTimerHook.tsx","components/components/modules/TimerModule.tsx","components/components/TimerComponent.tsx","components/components/QuizComponent.tsx","components/components/TableComponent.tsx","components/TsumeShogiTimer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useAudio","props","_React$useState","React","useState","Audio","url","audio","Object","slicedToArray","play","pause","currentTime","load","useQuizTimer","_useTimer","useTimer","expiryTimestamp","Date","autoStart","onExpire","callbackOnExpire","seconds","minutes","isRunning","hours","days","start","resume","restart","startQuiz","time","setSeconds","getSeconds","answerQuiz","pauseQuiz","resumeQuiz","TimeModule","timeStr","num","show","slice","react_default","a","createElement","Fragment","style","fontSize","color","active","TimerComponent","_React$useState2","timerActive","setTimerActive","_React$useState3","Math","floor","_React$useState4","quizMinutes","setQuizMinutes","_React$useState5","_React$useState6","quizSeconds","setQuizSeconds","quizTimer","timeup","answerButtonRef","useRef","timerStart","callbackOnStart","current","focus","checkContinue","callbackOnTimeUp","result","continueQuiz","setTimeout","Grid2","container","spacing","width","xs","xsOffset","Button","fullWidth","disabled","variant","startIcon","Timer_default","onClick","Lightbulb_default","callbackOnAnswer","ref","TimerModule","QuizComponent","Box","resultTag","TableComponent","TableContainer","sx","maxHeight","component","Paper","Table","aria-label","size","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","resultList","map","idx","key","console","log","TsumeShogiTimer","setRunning","quizCount","setQuizCount","quizStatus1","setQuizStatus1","_React$useState7","_React$useState8","quizStatus2","setQuizStatus2","_React$useState9","_React$useState10","quizStatus3","setQuizStatus3","_React$useState11","_React$useState12","quizStatus4","setQuizStatus4","_React$useState13","_React$useState14","setResultList","audioOK","process","audioNG","addResult","prevState","concat","toConsumableArray","components_TimerComponent","components_QuizComponent","components_TableComponent","App","className","components_TsumeShogiTimer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b4b2ffa2.chunk.js","sourcesContent":["import React from 'react';\n\ninterface UseAudioPropsType\n{\n    url: string;\n}\n\nconst useAudio = ( props: UseAudioPropsType ) => {\n    const [ audio ] = React.useState( new Audio( props.url ) );\n\n    const load = () => {\n        audio.load();\n    }\n\n    const play = () => {\n        audio.pause();\n        audio.currentTime = 0;\n        audio.play();\n    }\n    \n    return { play, load };\n}\n\nexport default useAudio;\n","import React from 'react';\nimport { useTimer } from 'react-timer-hook';\n\ninterface CallbackOnExpireType\n{\n    (): void;\n}\n\ninterface UseCountDownPropsType\n{\n    seconds: number;\n    callbackOnExpire: CallbackOnExpireType;\n}\n\nconst useQuizTimer = ( props: UseCountDownPropsType ) => {\n    const {\n        seconds,\n        minutes,\n        hours,\n        days,\n        isRunning,\n        start,\n        pause,\n        resume,\n        restart,\n    } = useTimer({ expiryTimestamp: new Date(), autoStart: false, onExpire: () => props.callbackOnExpire() });\n\n    const startQuiz = () => {\n        const time = new Date();\n        time.setSeconds( time.getSeconds() + props.seconds );\n        restart( time );\n    }\n\n    const answerQuiz = () => {\n        pause();\n    }\n\n    const pauseQuiz = () => {\n        pause()\n    }\n\n    const resumeQuiz = () => {\n        resume()\n    }\n\n    return { seconds, minutes, isRunning, startQuiz, answerQuiz, pauseQuiz, resumeQuiz };\n}\n\nexport default useQuizTimer;\n","import React from 'react';\n\ninterface TimeModulePropsType\n{\n    show: boolean;\n    active: boolean;\n    minutes: number;\n    seconds: number;\n    fontSize: string;\n}\n\nconst TimeModule = ( props: TimeModulePropsType ) => {\n    const timeStr = ( num: number ) => {\n        if ( props.show )\n        {\n            return ('00' + num).slice(-2);\n        }\n        else\n        {\n            return '--';\n        }\n    }\n\n    return (\n        <>\n            <div style={ { fontSize: props.fontSize, color: props.active ? 'white' : 'gray' } }>\n                <span>{ timeStr( props.minutes ) }</span>:<span>{ timeStr( props.seconds ) }</span>\n            </div>\n        </>\n    )\n}\n\nexport default TimeModule;\n","import React, { useEffect } from 'react';\nimport useQuizTimer from '../hooks/QuizTimerHook';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport { Button, Stack } from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2/Grid2';\n\nimport TimerModule from './modules/TimerModule';\nimport { ResultType } from '../TsumeShogiTimer';\n\ninterface CallbackType {\n    (): void;\n}\n\ninterface CallbackAddResultType {\n    (argv: ResultType): void;\n}\n\ninterface TimeComponentPropsType {\n    seconds: number;\n    continueQuiz: boolean;\n    callbackOnStart: CallbackType;\n    callbackOnTimeUp: CallbackAddResultType;\n    callbackOnAnswer: CallbackAddResultType;\n}\n\nconst TimerComponent = (props: TimeComponentPropsType) => {\n    const [timerActive, setTimerActive] = React.useState(false);\n    const [quizMinutes, setQuizMinutes] = React.useState(Math.floor(props.seconds / 60));\n    const [quizSeconds, setQuizSeconds] = React.useState(props.seconds % 60);\n\n    const quizTimer = useQuizTimer({ seconds: quizSeconds, callbackOnExpire: () => timeup() });\n\n    const answerButtonRef = React.useRef<HTMLButtonElement>(null!);\n\n    const timerStart = () => {\n        if (!quizTimer.isRunning) {\n            setTimerActive(true);\n            setQuizMinutes(Math.floor(props.seconds / 60));\n            setQuizSeconds(props.seconds % 60);\n            quizTimer.startQuiz();\n            props.callbackOnStart();\n            answerButtonRef.current.focus();\n        }\n        else {\n            quizTimer.startQuiz();\n        }\n    }\n\n    const answer = () => {\n        if (timerActive) {\n            quizTimer.answerQuiz();\n            checkContinue();\n            props.callbackOnAnswer({\n                minutes: (quizMinutes - quizTimer.minutes),\n                seconds: (quizSeconds - quizTimer.seconds),\n                result: 1\n            });\n        }\n    }\n    const timeup = () => {\n        checkContinue();\n        props.callbackOnTimeUp({\n            minutes: quizMinutes,\n            seconds: quizSeconds,\n            result: 2\n        });\n    }\n\n    const checkContinue = () => {\n        if (props.continueQuiz) {\n            setTimeout( () => timerStart(), 10);\n        }\n        else {\n            setTimerActive(false);\n        }\n    }\n\n    return (\n        <>\n            <Grid container spacing={2} width=\"90%\">\n                <Grid xs={10} xsOffset={1}>\n                    <Grid container spacing={2} width=\"100%\">\n                        <Grid xs={6}>\n                            <Button\n                                fullWidth={true}\n                                disabled={timerActive}\n                                variant=\"outlined\"\n                                startIcon={<TimerIcon />}\n                                onClick={() => timerStart()}\n                            >START</Button>\n                        </Grid>\n                        <Grid xs={6}>\n                            <Button\n                                fullWidth={true}\n                                variant=\"outlined\"\n                                startIcon={<LightbulbIcon />}\n                                onClick={() => answer()}\n                                ref={answerButtonRef}\n                            >ANSWER</Button>\n                        </Grid>\n                        <Grid xs={12}>\n                            <TimerModule\n                                show={timerActive}\n                                active={timerActive}\n                                minutes={quizTimer.minutes}\n                                seconds={quizTimer.seconds}\n                                fontSize={'48px'}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default TimerComponent;\n","import React from 'react';\nimport { Box } from '@mui/system';\n\nimport TimerModule from './modules/TimerModule';\nimport { ResultType } from '../TsumeShogiTimer';\nimport { Button } from '@mui/material';\n\ninterface QuizComponentPropsType\n{\n    show: boolean;\n    active: boolean;\n    result: ResultType;\n}\n\nconst QuizComponent = ( props: QuizComponentPropsType ) => {\n    const resultTag = () => {\n        if ( props.show )\n        {\n            if ( props.active )\n            {\n                switch ( props.result.result )\n                {\n                    case 1:\n                        return (\n                            <div style={{ color: 'white', fontSize: '16px' }} >OK</div>\n                        );\n                        break;\n                    case 2:\n                        return (\n                            <div style={{ color: 'red', fontSize: '16px' }} >NG</div>\n                        );\n                        break;\n                    case 0:\n                    default:\n                        return (\n                            <div style={{ color: 'white', fontSize: '16px' }} >-</div>\n                        );\n                        break;\n                }\n            }\n            else\n            {\n                switch ( props.result.result )\n                {\n                    case 1:\n                        return (\n                            <div style={{ color: 'gray', fontSize: '16px' }} >OK</div>\n                        );\n                        break;\n                    case 2:\n                        return (\n                            <div style={{ color: 'gray', fontSize: '16px' }} >NG</div>\n                        );\n                        break;\n                    case 0:\n                    default:\n                        return (\n                            <div style={{ color: 'gray', fontSize: '16px' }} >-</div>\n                        );\n                        break;\n                }\n            }\n        }\n        else\n        {\n            if ( props.active )\n            {\n                return (\n                    <div style={{ color: 'white', fontSize: '16px' }} >-</div>\n                )\n            }\n            else\n            {\n                return (\n                    <div style={{ color: 'gray', fontSize: '16px' }} >-</div>\n                );\n            }\n        }\n    }\n\n    return (\n        <>\n            <Box>\n                { resultTag() }\n                <TimerModule \n                    show={props.show}\n                    active={props.active}\n                    minutes={props.result.minutes}\n                    seconds={props.result.seconds}\n                    fontSize={'16px'}\n                />\n            </Box>\n        </>\n    )\n}\n\nexport default QuizComponent;\n","import React from 'react';\nimport { Table, TableContainer, TableHead, TableRow, TableBody, TableCell, Paper, Button } from '@mui/material';\n\nimport { ResultType } from '../TsumeShogiTimer';\n\ninterface TableComponentPropsType\n{\n    resultList: ResultType[];\n}\n\nconst TableComponent = ( props: TableComponentPropsType ) => {\n    const tableBody = () => {\n        return (\n            <TableBody>\n                { props.resultList.map( ( result: ResultType, idx: number ) => (\n                    <TableRow key={idx}>\n                        <TableCell align=\"center\">{ '#' + ( '000' + ( idx + 1 ) ).slice(-3) }</TableCell>\n                        <TableCell align=\"center\">{ ( '00' + result.minutes ).slice( -2 ) + \":\" + ( '00' + (result.seconds) ).slice( -2 ) }</TableCell>\n                        <TableCell align=\"center\">{ result.result === 0 ? \"-\" : result.result === 1 ? \"OK\" : \"NG\" }</TableCell>\n                        <TableCell align=\"center\">\n                            <Button variant=\"outlined\" onClick={ () => console.log(idx) } >DEBUG</Button>\n                        </TableCell>\n                    </TableRow> \n                ) ) }\n            </TableBody>\n        );\n    }\n\n    return (\n        <>\n        <TableContainer sx={{ maxHeight: 240 }} style={{width:\"90%\", fontSize:\"16px\"}} component={Paper}>\n            <Table aria-label=\"simple table\" size=\"small\" stickyHeader>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">#</TableCell>\n                        <TableCell align=\"center\">Time</TableCell>\n                        <TableCell align=\"center\">Answer</TableCell>\n                        <TableCell align=\"center\">Debug</TableCell>\n                    </TableRow>\n                </TableHead>\n                { tableBody() }\n            </Table>\n        </TableContainer>\n        </>\n    );\n}\n\nexport default TableComponent;\n","import React from 'react';\nimport Grid from '@mui/material/Unstable_Grid2/Grid2';\n\nimport useAudio from './hooks/AudioHook';\nimport TimerComponent from './components/TimerComponent';\nimport QuizComponent from './components/QuizComponent';\nimport TableComponent from './components/TableComponent';\n\nconst audioOKUrl = process.env.PUBLIC_URL + '/audio/sound_ok.mp3';\nconst audioNGUrl = process.env.PUBLIC_URL + '/audio/sound_ng.mp3';\n\nexport interface ResultType {\n    minutes: number;\n    seconds: number;\n    result: number;\n}\n\ninterface QuizStatusType {\n    active: boolean;\n    result: ResultType;\n}\n\nconst TsumeShogiTimer = () => {\n    // Status\n    const [running, setRunning] = React.useState(false);\n    const [quizCount, setQuizCount] = React.useState(0);\n\n    // Results\n    const [quizStatus1, setQuizStatus1] = React.useState<QuizStatusType>( { active: false, result: { minutes: 0, seconds: 0, result: 0 } } );\n    const [quizStatus2, setQuizStatus2] = React.useState<QuizStatusType>( { active: false, result: { minutes: 0, seconds: 0, result: 0 } } );\n    const [quizStatus3, setQuizStatus3] = React.useState<QuizStatusType>( { active: false, result: { minutes: 0, seconds: 0, result: 0 } } );\n    const [quizStatus4, setQuizStatus4] = React.useState<QuizStatusType>( { active: false, result: { minutes: 0, seconds: 0, result: 0 } } );\n    \n    const [resultList, setResultList] = React.useState<ResultType[]>([]);\n\n    // Audio\n    const audioOK = useAudio({ url: audioOKUrl });\n    const audioNG = useAudio({ url: audioNGUrl });\n\n    // Functions\n    const begin = () => {\n        setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n        setRunning(true);\n        audioOK.load();\n        audioNG.load();\n    }\n\n    const answer = (result: ResultType) => {\n        switch (quizCount) {\n            case 0:\n                setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus1( ( prevState: QuizStatusType ) => ( { active: true, result: prevState.result } ) );\n                break;\n            case 1:\n                setQuizStatus1( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus2( ( prevState: QuizStatusType ) => ( { active: true, result: prevState.result } ) );\n                break;\n            case 2:\n                setQuizStatus2( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus3( ( prevState: QuizStatusType ) => ( { active: true, result: prevState.result } ) );\n                break;\n            case 3:\n                setQuizStatus3( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: true, result: prevState.result } ) );\n                break;\n            default:\n                break;\n        }\n        audioOK.play();\n        addResult(result);\n        setRunning(false);\n    }\n\n    const finish = (result: ResultType) => {\n        switch (quizCount) {\n            case 0:\n                setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus1( { active: true, result: result } );\n                break;\n            case 1:\n                setQuizStatus1( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus2( { active: true, result: result } );\n                break;\n            case 2:\n                setQuizStatus2( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus3( { active: true, result: result } );\n                break;\n            case 3:\n                setQuizStatus3( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus4( { active: true, result: result } );\n                break;\n            default:\n                break;\n        }\n        audioNG.play();\n        addResult(result);\n        setRunning(false);\n    }\n\n    const addResult = (result: ResultType) => {\n        switch (quizCount) {\n            case 0:\n                setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus1( { active: true, result: result } );\n                break;\n            case 1:\n                setQuizStatus1( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus2( { active: true, result: result } );\n                break;\n            case 2:\n                setQuizStatus2( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus3( { active: true, result: result } );\n                break;\n            case 3:\n                setQuizStatus3( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus4( { active: true, result: result } );\n                break;\n            default:\n                break;\n        }\n        setQuizCount((quizCount + 1) % 4);\n        setResultList((prevState: ResultType[]) => [...prevState, result]);\n    }\n\n    // Rendering\n    return (\n        <>\n            <hr style={{ width: \"90%\" }} />\n            <TimerComponent seconds={30} continueQuiz={ quizCount < 3 } callbackOnStart={begin} callbackOnTimeUp={finish} callbackOnAnswer={answer} />\n            <hr style={{ width: \"90%\" }} />\n            <Grid container spacing={2}>\n                <Grid xs={6}>\n                    <QuizComponent show={true} active={quizStatus3.active} result={quizStatus3.result} />\n                </Grid>\n                <Grid xs={6}>\n                    <QuizComponent show={true} active={quizStatus1.active} result={quizStatus1.result} />\n                </Grid>\n                <Grid xs={6}>\n                    <QuizComponent show={true} active={quizStatus4.active} result={quizStatus4.result} />\n                </Grid>\n                <Grid xs={6}>\n                    <QuizComponent show={true} active={quizStatus2.active} result={quizStatus2.result} />\n                </Grid>\n            </Grid>\n            <hr style={{ width: \"90%\" }} />\n            <TableComponent resultList={resultList} />\n            <hr style={{ width: \"90%\" }} />\n        </>\n    );\n}\n\nexport default TsumeShogiTimer;\n","import React from 'react';\nimport './App.css';\n\nimport Timer from './useTimer';\nimport TimerManager from './timerManager';\nimport TimerComponent from './components/TsumeShogiTimer';\nimport TsumeShogiTimer from './components/TsumeShogiTimer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <TimerManager /> */}\n        <TsumeShogiTimer />\n      </header>\n    </div>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}