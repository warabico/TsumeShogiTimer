{"version":3,"sources":["components/hooks/AudioHook.tsx","components/hooks/QuizTimerHook.tsx","components/components/modules/TimerModule.tsx","components/components/TimerComponent.tsx","components/components/QuizComponent.tsx","components/components/TableComponent.tsx","components/TsumeShogiTimer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useAudio","props","_React$useState","React","useState","Audio","url","audio","Object","slicedToArray","play","useQuizTimer","_useTimer","useTimer","expiryTimestamp","Date","autoStart","onExpire","callbackOnExpire","seconds","minutes","isRunning","hours","days","pause","start","resume","restart","startQuiz","time","setSeconds","getSeconds","answerQuiz","pauseQuiz","resumeQuiz","TimeModule","timeStr","num","show","slice","react_default","a","createElement","Fragment","style","fontSize","color","active","TimerComponent","_React$useState2","timerActive","setTimerActive","_React$useState3","Math","floor","_React$useState4","quizMinutes","setQuizMinutes","_React$useState5","_React$useState6","quizSeconds","setQuizSeconds","quizTimer","timeup","answerButtonRef","useRef","timerStart","callbackOnStart","current","focus","checkContinue","callbackOnTimeUp","result","continueQuiz","Grid2","container","spacing","width","xs","xsOffset","Stack","direction","Button","disabled","variant","startIcon","Timer_default","onClick","Lightbulb_default","callbackOnAnswer","ref","TimerModule","QuizComponent","Box","resultTag","TableComponent","TableContainer","component","Paper","Table","aria-label","size","TableHead","TableRow","TableCell","align","TableBody","resultList","map","idx","key","console","log","TsumeShogiTimer","setRunning","quizCount","setQuizCount","quizStatus1","setQuizStatus1","_React$useState7","_React$useState8","quizStatus2","setQuizStatus2","_React$useState9","_React$useState10","quizStatus3","setQuizStatus3","_React$useState11","_React$useState12","quizStatus4","setQuizStatus4","_React$useState13","_React$useState14","setResultList","audioOK","process","audioNG","addResult","prevState","concat","toConsumableArray","components_TimerComponent","components_QuizComponent","components_TableComponent","App","className","components_TsumeShogiTimer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.436f817f.chunk.js","sourcesContent":["import React from 'react';\n\ninterface UseAudioPropsType\n{\n    url: string;\n}\n\nconst useAudio = ( props: UseAudioPropsType ) => {\n    const [ audio ] = React.useState( new Audio( props.url ) );\n\n    const play = () => {\n        audio.play();\n    }\n    \n    return { play };\n}\n\nexport default useAudio;\n","import React from 'react';\nimport { useTimer } from 'react-timer-hook';\n\ninterface CallbackOnExpireType\n{\n    (): void;\n}\n\ninterface UseCountDownPropsType\n{\n    seconds: number;\n    callbackOnExpire: CallbackOnExpireType;\n}\n\nconst useQuizTimer = ( props: UseCountDownPropsType ) => {\n    const {\n        seconds,\n        minutes,\n        hours,\n        days,\n        isRunning,\n        start,\n        pause,\n        resume,\n        restart,\n    } = useTimer({ expiryTimestamp: new Date(), autoStart: false, onExpire: () => props.callbackOnExpire() });\n\n    const startQuiz = () => {\n        const time = new Date();\n        time.setSeconds( time.getSeconds() + props.seconds );\n        restart( time );\n    }\n\n    const answerQuiz = () => {\n        pause();\n    }\n\n    const pauseQuiz = () => {\n        pause()\n    }\n\n    const resumeQuiz = () => {\n        resume()\n    }\n\n    return { seconds, minutes, isRunning, startQuiz, answerQuiz, pauseQuiz, resumeQuiz };\n}\n\nexport default useQuizTimer;\n","import React from 'react';\n\ninterface TimeModulePropsType\n{\n    show: boolean;\n    active: boolean;\n    minutes: number;\n    seconds: number;\n    fontSize: string;\n}\n\nconst TimeModule = ( props: TimeModulePropsType ) => {\n    const timeStr = ( num: number ) => {\n        if ( props.show )\n        {\n            return ('00' + num).slice(-2);\n        }\n        else\n        {\n            return '--';\n        }\n    }\n\n    return (\n        <>\n            <div style={ { fontSize: props.fontSize, color: props.active ? 'white' : 'gray' } }>\n                <span>{ timeStr( props.minutes ) }</span>:<span>{ timeStr( props.seconds ) }</span>\n            </div>\n        </>\n    )\n}\n\nexport default TimeModule;\n","import React, { useEffect } from 'react';\nimport useQuizTimer from '../hooks/QuizTimerHook';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport { Button, Stack } from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2/Grid2';\n\nimport TimerModule from './modules/TimerModule';\nimport { ResultType } from '../TsumeShogiTimer';\n\ninterface CallbackType {\n    (): void;\n}\n\ninterface CallbackAddResultType {\n    (argv: ResultType): void;\n}\n\ninterface TimeComponentPropsType {\n    seconds: number;\n    continueQuiz: boolean;\n    callbackOnStart: CallbackType;\n    callbackOnTimeUp: CallbackAddResultType;\n    callbackOnAnswer: CallbackAddResultType;\n}\n\nconst TimerComponent = (props: TimeComponentPropsType) => {\n    const [ timerActive, setTimerActive ] = React.useState( false );\n    const [ quizMinutes, setQuizMinutes ] = React.useState( Math.floor( props.seconds / 60 ) );\n    const [ quizSeconds, setQuizSeconds ] = React.useState( props.seconds % 60 );\n\n    const quizTimer = useQuizTimer({ seconds: quizSeconds, callbackOnExpire: () => timeup() });\n\n    const answerButtonRef = React.useRef<HTMLButtonElement>(null!);\n\n    const timerStart = () => {\n        if (!quizTimer.isRunning) {\n            setTimerActive(true);\n            setQuizMinutes( Math.floor( props.seconds / 60 ) );\n            setQuizSeconds( props.seconds % 60 );\n            quizTimer.startQuiz();\n            props.callbackOnStart();\n            answerButtonRef.current.focus();\n        }\n        else\n        {\n            quizTimer.startQuiz();\n        }\n    }\n\n    const answer = () => {\n        if ( timerActive )\n        {\n            quizTimer.answerQuiz();\n            checkContinue();\n            props.callbackOnAnswer({\n                minutes: ( quizMinutes - quizTimer.minutes ),\n                seconds: ( quizSeconds - quizTimer.seconds ),\n                result: 1\n            });\n        }\n    }\n    const timeup = () => {\n        checkContinue();\n        props.callbackOnTimeUp({\n            minutes: quizMinutes,\n            seconds: quizSeconds,\n            result: 2\n        });\n    }\n\n    const checkContinue = () => {\n        if ( props.continueQuiz )\n        {\n            timerStart();\n        }\n        else\n        {\n            setTimerActive( false );\n        }\n    }\n\n    return (\n        <>\n            <Grid container spacing={2} width=\"90%\">\n                <Grid xs={8} xsOffset={2}>\n                    <Stack direction=\"column\" spacing={2}>\n                        <Button\n                            disabled={ timerActive }\n                            variant=\"outlined\"\n                            startIcon={<TimerIcon />}\n                            onClick={() => timerStart()}\n                        >START</Button>\n                        <Button\n                            variant=\"outlined\"\n                            startIcon={<LightbulbIcon />}\n                            onClick={() => answer()}\n                            ref={answerButtonRef}\n                        >ANSWER</Button>\n                        <TimerModule\n                            show={timerActive}\n                            active={timerActive}\n                            minutes={quizTimer.minutes}\n                            seconds={quizTimer.seconds}\n                            fontSize={'48px'}\n                        />\n                    </Stack>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default TimerComponent;\n","import React from 'react';\nimport { Box } from '@mui/system';\n\nimport TimerModule from './modules/TimerModule';\nimport { ResultType } from '../TsumeShogiTimer';\nimport { Button } from '@mui/material';\n\ninterface QuizComponentPropsType\n{\n    show: boolean;\n    active: boolean;\n    result: ResultType;\n}\n\nconst QuizComponent = ( props: QuizComponentPropsType ) => {\n    const resultTag = () => {\n        if ( props.show )\n        {\n            if ( props.active )\n            {\n                switch ( props.result.result )\n                {\n                    case 1:\n                        return (\n                            <div style={{ color: 'white', fontSize: '16px' }} >OK</div>\n                        );\n                        break;\n                    case 2:\n                        return (\n                            <div style={{ color: 'red', fontSize: '16px' }} >NG</div>\n                        );\n                        break;\n                    case 0:\n                    default:\n                        return (\n                            <div style={{ color: 'white', fontSize: '16px' }} >-</div>\n                        );\n                        break;\n                }\n            }\n            else\n            {\n                switch ( props.result.result )\n                {\n                    case 1:\n                        return (\n                            <div style={{ color: 'gray', fontSize: '16px' }} >OK</div>\n                        );\n                        break;\n                    case 2:\n                        return (\n                            <div style={{ color: 'gray', fontSize: '16px' }} >NG</div>\n                        );\n                        break;\n                    case 0:\n                    default:\n                        return (\n                            <div style={{ color: 'gray', fontSize: '16px' }} >-</div>\n                        );\n                        break;\n                }\n            }\n        }\n        else\n        {\n            if ( props.active )\n            {\n                return (\n                    <div style={{ color: 'white', fontSize: '16px' }} >-</div>\n                )\n            }\n            else\n            {\n                return (\n                    <div style={{ color: 'gray', fontSize: '16px' }} >-</div>\n                );\n            }\n        }\n    }\n\n    return (\n        <>\n            <Box>\n                { resultTag() }\n                <TimerModule \n                    show={props.show}\n                    active={props.active}\n                    minutes={props.result.minutes}\n                    seconds={props.result.seconds}\n                    fontSize={'16px'}\n                />\n            </Box>\n        </>\n    )\n}\n\nexport default QuizComponent;\n","import React from 'react';\nimport { Table, TableContainer, TableHead, TableRow, TableBody, TableCell, Paper, Button } from '@mui/material';\n\nimport { ResultType } from '../TsumeShogiTimer';\n\ninterface TableComponentPropsType\n{\n    resultList: ResultType[];\n}\n\nconst TableComponent = ( props: TableComponentPropsType ) => {\n    const tableBody = () => {\n        return (\n            <TableBody>\n                { props.resultList.map( ( result: ResultType, idx: number ) => (\n                    <TableRow key={idx}>\n                        <TableCell align=\"center\">{ '#' + ( '000' + ( idx + 1 ) ).slice(-3) }</TableCell>\n                        <TableCell align=\"center\">{ ( '00' + result.minutes ).slice( -2 ) + \":\" + ( '00' + (result.seconds) ).slice( -2 ) }</TableCell>\n                        <TableCell align=\"center\">{ result.result === 0 ? \"-\" : result.result === 1 ? \"OK\" : \"NG\" }</TableCell>\n                        <TableCell align=\"center\">\n                            <Button variant=\"outlined\" onClick={ () => console.log(idx) } >DEBUG</Button>\n                        </TableCell>\n                    </TableRow> \n                ) ) }\n            </TableBody>\n        );\n    }\n\n    return (\n        <>\n        <TableContainer style={{width:\"90%\", fontSize:\"16px\"}} component={Paper}>\n            <Table aria-label=\"simple table\" size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">#</TableCell>\n                        <TableCell align=\"center\">Time</TableCell>\n                        <TableCell align=\"center\">Answer</TableCell>\n                        <TableCell align=\"center\">Change Answer</TableCell>\n                    </TableRow>\n                </TableHead>\n                { tableBody() }\n            </Table>\n        </TableContainer>\n        </>\n    );\n}\n\nexport default TableComponent;\n","import React from 'react';\nimport Grid from '@mui/material/Unstable_Grid2/Grid2';\n\nimport useAudio from './hooks/AudioHook';\nimport TimerComponent from './components/TimerComponent';\nimport QuizComponent from './components/QuizComponent';\nimport TableComponent from './components/TableComponent';\n\nconst audioOKUrl = process.env.PUBLIC_URL + '/audio/sound_ok.mp3';\nconst audioNGUrl = process.env.PUBLIC_URL + '/audio/sound_ng.mp3';\n\nexport interface ResultType {\n    minutes: number;\n    seconds: number;\n    result: number;\n}\n\ninterface QuizStatusType {\n    active: boolean;\n    result: ResultType;\n}\n\nconst TsumeShogiTimer = () => {\n    // Status\n    const [running, setRunning] = React.useState(false);\n    const [quizCount, setQuizCount] = React.useState(0);\n\n    // Results\n    const [quizStatus1, setQuizStatus1] = React.useState<QuizStatusType>( { active: false, result: { minutes: 0, seconds: 0, result: 0 } } );\n    const [quizStatus2, setQuizStatus2] = React.useState<QuizStatusType>( { active: false, result: { minutes: 0, seconds: 0, result: 0 } } );\n    const [quizStatus3, setQuizStatus3] = React.useState<QuizStatusType>( { active: false, result: { minutes: 0, seconds: 0, result: 0 } } );\n    const [quizStatus4, setQuizStatus4] = React.useState<QuizStatusType>( { active: false, result: { minutes: 0, seconds: 0, result: 0 } } );\n    \n    const [resultList, setResultList] = React.useState<ResultType[]>([]);\n\n    // Audio\n    const audioOK = useAudio({ url: audioOKUrl });\n    const audioNG = useAudio({ url: audioNGUrl });\n\n    // Functions\n    const begin = () => {\n        setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n        setRunning(true);\n    }\n\n    const answer = (result: ResultType) => {\n        switch (quizCount) {\n            case 0:\n                setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus1( ( prevState: QuizStatusType ) => ( { active: true, result: prevState.result } ) );\n                break;\n            case 1:\n                setQuizStatus1( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus2( ( prevState: QuizStatusType ) => ( { active: true, result: prevState.result } ) );\n                break;\n            case 2:\n                setQuizStatus2( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus3( ( prevState: QuizStatusType ) => ( { active: true, result: prevState.result } ) );\n                break;\n            case 3:\n                setQuizStatus3( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: true, result: prevState.result } ) );\n                break;\n            default:\n                break;\n        }\n        audioOK.play();\n        addResult(result);\n        setRunning(false);\n    }\n\n    const finish = (result: ResultType) => {\n        switch (quizCount) {\n            case 0:\n                setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus1( { active: true, result: result } );\n                break;\n            case 1:\n                setQuizStatus1( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus2( { active: true, result: result } );\n                break;\n            case 2:\n                setQuizStatus2( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus3( { active: true, result: result } );\n                break;\n            case 3:\n                setQuizStatus3( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus4( { active: true, result: result } );\n                break;\n            default:\n                break;\n        }\n        audioNG.play();\n        addResult(result);\n        setRunning(false);\n    }\n\n    const addResult = (result: ResultType) => {\n        switch (quizCount) {\n            case 0:\n                setQuizStatus4( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus1( { active: true, result: result } );\n                break;\n            case 1:\n                setQuizStatus1( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus2( { active: true, result: result } );\n                break;\n            case 2:\n                setQuizStatus2( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus3( { active: true, result: result } );\n                break;\n            case 3:\n                setQuizStatus3( ( prevState: QuizStatusType ) => ( { active: false, result: prevState.result } ) );\n                setQuizStatus4( { active: true, result: result } );\n                break;\n            default:\n                break;\n        }\n        setQuizCount((quizCount + 1) % 4);\n        setResultList((prevState: ResultType[]) => [...prevState, result]);\n    }\n\n    // Rendering\n    return (\n        <>\n            <hr style={{ width: \"90%\" }} />\n            <TimerComponent seconds={30} continueQuiz={ quizCount < 3 } callbackOnStart={begin} callbackOnTimeUp={finish} callbackOnAnswer={answer} />\n            <hr style={{ width: \"90%\" }} />\n            <Grid container spacing={2}>\n                <Grid xs={6}>\n                    <QuizComponent show={true} active={quizStatus3.active} result={quizStatus3.result} />\n                </Grid>\n                <Grid xs={6}>\n                    <QuizComponent show={true} active={quizStatus1.active} result={quizStatus1.result} />\n                </Grid>\n                <Grid xs={6}>\n                    <QuizComponent show={true} active={quizStatus4.active} result={quizStatus4.result} />\n                </Grid>\n                <Grid xs={6}>\n                    <QuizComponent show={true} active={quizStatus2.active} result={quizStatus2.result} />\n                </Grid>\n            </Grid>\n            <hr style={{ width: \"90%\" }} />\n            <TableComponent resultList={resultList} />\n        </>\n    );\n}\n\nexport default TsumeShogiTimer;\n","import React from 'react';\nimport './App.css';\n\nimport Timer from './useTimer';\nimport TimerManager from './timerManager';\nimport TimerComponent from './components/TsumeShogiTimer';\nimport TsumeShogiTimer from './components/TsumeShogiTimer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <TimerManager /> */}\n        <TsumeShogiTimer />\n      </header>\n    </div>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}