{"version":3,"sources":["timerComponent.tsx","resultTableComponent.tsx","timerManager.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimerComponent","props","_useTimer","useTimer","expiryTimestamp","Date","autoStart","onExpire","timeup","seconds","minutes","isRunning","hours","days","pause","start","restart","resume","myRef","React","useRef","_React$useState","useState","_React$useState2","Object","slicedToArray","started","setStarted","_React$useState3","_React$useState4","cleared","setCleared","_React$useState5","_React$useState6","quizResult","setQuizResult","_React$useState7","_React$useState8","open","setOpen","startedRef","enabledRef","runningRef","current","enabled","running","time","setSeconds","getSeconds","focus","gonext","callbackOK","callbackNG","react_default","a","createElement","Fragment","type","style","height","background","border","onKeyDown","e","console","log","key","ref","Box","sx","width","color","fontSize","slice","Math","floor","Button","variant","onClick","disabled","ResultTableComponent","sxAnswerOK","sxAnswerNG","fontWeight","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","secondsList","map","index","&:last-child td, &:last-child th","answerList","callbackChangeAnswer","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ExcelJS","require","TimerManager","Audio","process","audioOK","audioNG","quizCount","setQuizCount","setRunning","_React$useState9","_React$useState10","_React$useState11","_React$useState12","setSecondsList","_React$useState13","_React$useState14","setAnswerList","quizOK","resultSeconds","play","incQuiz","addList","quizNG","answer","prevState","concat","toConsumableArray","outputExcel","_ref","asyncToGenerator","_callee","workbook","worksheet","idx","uint8Array","now","filename","blob","url","_context","Workbook","addWorksheet","getWorksheet","columns","header","addRow","id","xlsx","writeBuffer","getFullYear","getMonth","getDay","getHours","getMinutes","Blob","window","URL","createObjectURL","document","href","download","click","remove","apply","arguments","Stack","direction","xs","sm","md","spacing","changeRunning","size","timerComponent","resultTableComponent","App","className","timerManager","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b3acc86d.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Button } from '@mui/material';\nimport { useTimer } from 'react-timer-hook';\nimport { bgcolor } from '@mui/system';\n\ninterface callbackOKType {\n    (argv: number): void;\n};\ninterface callbackNGType {\n    (): void;\n};\n\ninterface TimerProps {\n    running: boolean;\n    enabled: boolean;\n    seconds: number;\n    callbackOK: callbackOKType;\n    callbackNG: callbackNGType;\n};\n\nconst TimerComponent = (props: TimerProps) => {\n    const {\n        seconds,\n        minutes,\n        hours,\n        days,\n        isRunning,\n        start,\n        pause,\n        resume,\n        restart,\n    } = useTimer({ expiryTimestamp: new Date(), autoStart: false, onExpire: () => timeup() });\n\n    const myRef = React.useRef<HTMLInputElement>(null!);\n\n    const [started, setStarted] = React.useState(false);\n    const [cleared, setCleared] = React.useState(false);\n    const [quizResult, setQuizResult] = React.useState(0);\n\n    const [open, setOpen] = React.useState(false);\n\n    const startedRef = React.useRef<boolean>();\n    const enabledRef = React.useRef<boolean>();\n    const runningRef = React.useRef<boolean>();\n    startedRef.current = started;\n    enabledRef.current = props.enabled;\n    runningRef.current = props.running;\n\n    if (props.running === true) {\n        if (props.enabled === true) {\n            if (started === false) {\n                const time = new Date();\n                time.setSeconds(time.getSeconds() + props.seconds);\n                restart(time);\n                setStarted(true);\n                setOpen(true);\n                myRef.current.focus();\n            }\n        }\n\n        if (cleared === false) {\n            setQuizResult(3);\n            setCleared(true);\n        }\n    }\n    else {\n        if (quizResult === 3) {\n            setQuizResult(0);\n        }\n        if (isRunning == true) {\n            pause();\n            setStarted(false);\n        }\n        if (cleared === true) {\n            setCleared(false);\n        }\n    }\n\n    const gonext = () => {\n        if (startedRef) {\n            pause();\n            setStarted(false);\n            setQuizResult(1);\n            props.callbackOK(props.seconds - (minutes * 60 + seconds));\n        }\n    }\n\n    const timeup = () => {\n        setStarted(false);\n        setQuizResult(2);\n        props.callbackNG();\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n        console.log(\"fire\")\n        if (e.key === 'Escape' && open) {\n            if (enabledRef && runningRef && startedRef) {\n                console.log(\"a\");\n                gonext();\n            }\n            setOpen(false);\n        }\n    };\n\n    return (\n        <>\n            <div>\n                <input type=\"text\" style={{height: 0, background: \"#1a2f52\", border: \"none\" }} onKeyDown={handleKeyDown} ref={myRef} />\n                {props.enabled && props.running ? (\n                    <Box sx={{ width: \"100%\" }}>\n                        <div style={{ color: quizResult === 2 ? \"red\" : \"white\" }} >\n                            {quizResult === 0 ? \"-\" : quizResult === 3 ? \"-\" : quizResult === 1 ? \"OK\" : \"NG\"}\n                        </div>\n                        <div style={{ fontSize: '100px' }}>\n                            <span>{('00' + minutes).slice(-2)}</span>:<span>{('00' + seconds).slice(-2)}</span>\n                        </div>\n                        <div style={{ fontSize: '40px', color: \"gray\" }}>\n                            <span>{('00' + (Math.floor(props.seconds / 60) - minutes)).slice(-2)}</span>:<span>{('00' + (props.seconds - seconds)).slice(-2)}</span>\n                        </div>\n                        <Button variant=\"outlined\" onClick={() => gonext()} sx={{ width: \"100%\" }}>NEXT</Button>\n                    </Box>\n                ) : (\n                    <Box sx={{ width: \"100%\" }}>\n                        <div style={{ color: quizResult === 2 ? \"red\" : \"white\" }} >\n                            {quizResult === 0 ? \"-\" : quizResult === 3 ? \"-\" : quizResult === 1 ? \"OK\" : \"NG\"}\n                        </div>\n                        {quizResult === 3 ? (\n                            <div style={{ fontSize: '100px', color: \"gray\" }}>\n                                <span>{('00' + Math.floor(props.seconds / 60)).slice(-2)}</span>:<span>{('00' + (props.seconds % 60)).slice(-2)}</span>\n                            </div>\n                        ) : (\n                            <div style={{ fontSize: '100px', color: \"gray\" }}>\n                                <span>{('00' + minutes).slice(-2)}</span>:<span>{('00' + seconds).slice(-2)}</span>\n                            </div>\n                        )}\n                        {quizResult === 3 ? (\n                            <div style={{ fontSize: '40px' }}>\n                                <span>00</span>:<span>00</span>\n                            </div>\n                        ) : (\n                            <div style={{ fontSize: '40px' }}>\n                                <span>{('00' + (Math.floor(props.seconds / 60) - minutes)).slice(-2)}</span>:<span>{('00' + (props.seconds - seconds)).slice(-2)}</span>\n                            </div>\n                        )}\n                        <Button disabled={true} variant=\"outlined\" onClick={() => gonext()} sx={{ width: \"100%\" }}>-</Button>\n                    </Box>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default TimerComponent;","import React from 'react';\n\nimport { Table, TableContainer, TableHead, TableRow, TableBody, TableCell, Paper, Button } from '@mui/material';\n\ninterface CallbackChangeAnswerType {\n    (argv: number): void;\n}\n\ninterface ResultTableProps {\n    secondsList: number[];\n    answerList: boolean[];\n    callbackChangeAnswer: CallbackChangeAnswerType\n};\n\nconst ResultTableComponent = (props: ResultTableProps) => {\n    const sxAnswerOK = {\n        color: \"black\"\n    };\n    const sxAnswerNG = {\n        color: \"red\",\n        fontWeight: \"bold\"\n    };\n\n    return (\n        <>\n            <TableContainer style={{width:\"50%\"}} component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">#</TableCell>\n                            <TableCell align=\"center\">Time</TableCell>\n                            <TableCell align=\"center\">Answer</TableCell>\n                            <TableCell align=\"center\">Change Answer</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {props.secondsList.map((seconds: number, index: number) => (\n                            <TableRow\n                                key={index}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell align=\"center\" component=\"th\" sx={ props.answerList[index] ? sxAnswerOK : sxAnswerNG } >\n                                    {\"#\" + ( '000' + ( index + 1) ).slice(-3) }\n                                </TableCell>\n                                <TableCell align=\"center\" sx={ props.answerList[index] ? sxAnswerOK : sxAnswerNG } >\n                                    { ( '00' + Math.floor(seconds / 60) ).slice( -2 ) + \":\" + ( '00' + (seconds) ).slice( -2 ) }\n                                </TableCell>\n                                <TableCell align=\"center\" sx={ props.answerList[index] ? sxAnswerOK : sxAnswerNG } >\n                                    { props.answerList[index] ? \"OK\" : \"NG\" }\n                                </TableCell>\n                                <TableCell align=\"center\" >\n                                    <Button variant=\"outlined\" onClick={() => props.callbackChangeAnswer(index)}>Change</Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}\n\nexport default ResultTableComponent;","import React from 'react';\nconst ExcelJS = require('exceljs');\nimport { Button, Stack } from '@mui/material';\n\nimport TimerComponent from './timerComponent';\nimport ResultTableComponent from './resultTableComponent';\n\n\ninterface resultType {\n    idx: number;\n    second: number;\n};\n\nconst audioOKUrl = process.env.PUBLIC_URL + '/audio/sound_ok.mp3';\nconst audioNGUrl = process.env.PUBLIC_URL + '/audio/sound_ng.mp3';\n\nconst TimerManager = () => {\n    const [ audioOK ] = React.useState( new Audio(audioOKUrl) );\n    const [ audioNG ] = React.useState( new Audio(audioNGUrl) );\n    const [ quizCount, setQuizCount ] = React.useState( 0 );\n    const [ running, setRunning ] = React.useState( false );\n    const [ seconds, setSeconds ] = React.useState( 30 );\n\n    const [ secondsList, setSecondsList ] = React.useState<number[]>( [] );\n    const [ answerList, setAnswerList ] = React.useState<boolean[]>( [] );\n\n    const changeRunning = () => {\n        if ( running === false )\n        {\n            setQuizCount(0);\n            setRunning(true);\n        }\n        else\n        {\n            for (let i = quizCount; i < 4; i++)\n            {\n                addList( seconds, false );\n            }\n            setQuizCount(0);\n            setRunning(false);\n        }\n    }\n\n    const quizOK = ( resultSeconds: number ) => {\n        audioOK.play();\n        incQuiz();\n        addList( resultSeconds, true );\n    }\n\n    const quizNG = () => {\n        audioNG.play();\n        incQuiz();\n        addList( seconds, false );\n    }\n\n    const incQuiz = () => {\n        if (quizCount < 3)\n        {\n            setQuizCount(quizCount + 1);\n        }\n        else\n        {\n            setQuizCount(0);\n            setRunning(false);\n        }\n    }\n\n    const addList = (seconds: number, answer: boolean) => {\n        setSecondsList( (prevState: number[]) => [...prevState, seconds] );\n        setAnswerList( (prevState: boolean[]) => [...prevState, answer] );\n    }\n\n    const changeAnswerStatus = (idx: number) => {\n        setAnswerList( (prevState: boolean[]) => prevState.map((value: boolean, index: number) => (index === idx ? !value : value)))\n    }\n    \n    const resetList = () => {\n        setSecondsList( [] );\n        setAnswerList( [] );\n    }\n\n    const outputExcel = async() => {\n        const workbook = new ExcelJS.Workbook();\n\n        // Workbookに新しいWorksheetを追加\n        workbook.addWorksheet('result');\n\n        // ↑で追加したWorksheetを参照し変数に代入\n        const worksheet = workbook.getWorksheet('result');\n        // 列を定義\n        worksheet.columns = [\n        { header: '#', key: 'id' },\n        { header: 'time', key: 'time' },\n        { header: 'answer', key: 'answer' },\n        ];\n\n        for (let idx = 0; idx < secondsList.length; idx++)\n        {\n            worksheet.addRow({\n                id: ( '000' + ( idx + 1) ).slice(-3),\n                time: ( '00' + Math.floor(secondsList[idx] / 60) ).slice( -2 ) + \":\" + ( '00' + (secondsList[idx]) ).slice( -2 ),\n                answer: ( answerList[idx] ? \"OK\" : \"NG\" )\n            });\n        }\n\n        // UInt8Arrayを生成\n        const uint8Array = await workbook.xlsx.writeBuffer();\n\n        // filename\n        const now = new Date();\n        const filename = \n            'tsumeshogi_' + \n            now.getFullYear() + \n            ('00' + (now.getMonth() + 1)).slice(-2) +\n            ('00' + (now.getDay() + 1)).slice(-2) + \n            '_' +\n            ('00' + now.getHours()).slice(-2) +\n            ('00' + now.getMinutes()).slice(-2) +\n            '.xlsx';\n\n        // Blob\n        const blob = new Blob([uint8Array], {type: 'application/octet-binary'});\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = filename;\n        a.click();\n        // ダウンロード後は不要なのでaタグを除去\n        a.remove();\n    }\n\n    return (\n        <>\n            <hr style={{width:\"90%\"}} />\n            <Stack\n                direction={{ xs: 'column', sm: 'column', md: 'row' }}\n                spacing={{ xs: 1, sm: 2, md: 4 }}\n            >\n                <Button variant=\"contained\" onClick={() => changeRunning()} size={\"large\"} >\n                    { running ? \"STOP\" : \"START\" }\n                </Button>\n                <Button disabled={ running } variant=\"contained\" onClick={() => resetList()} size={\"large\"}  >\n                    Reset\n                </Button>\n                <Button disabled={ running } variant=\"contained\" onClick={() => outputExcel()} size={\"large\"}  >\n                    Download Excel\n                </Button>\n            </Stack>\n            <Stack\n                direction={{ xs: 'column', sm: 'column', md: 'row' }}\n                spacing={{ xs: 1, sm: 2, md: 4 }}\n            >\n                <TimerComponent \n                    running={ running }\n                    enabled={ quizCount === 0 ? true : false }\n                    seconds={ seconds }\n                    callbackOK={ quizOK }\n                    callbackNG={ quizNG }\n                />\n                <TimerComponent \n                    running={ running }\n                    enabled={ quizCount === 1 ? true : false }\n                    seconds={ seconds }\n                    callbackOK={ quizOK }\n                    callbackNG={ quizNG }\n                />\n                <TimerComponent \n                    running={ running }\n                    enabled={ quizCount === 2 ? true : false }\n                    seconds={ seconds }\n                    callbackOK={ quizOK }\n                    callbackNG={ quizNG }\n                />\n                <TimerComponent \n                    running={ running }\n                    enabled={ quizCount === 3 ? true : false }\n                    seconds={ seconds }\n                    callbackOK={ quizOK }\n                    callbackNG={ quizNG }\n                />\n            </Stack>\n            <hr style={{width:\"90%\"}} />\n            <ResultTableComponent\n                secondsList={ secondsList }\n                answerList={ answerList }\n                callbackChangeAnswer={ changeAnswerStatus }\n            />\n        </>\n    );\n}\n\nexport default TimerManager;","import React from 'react';\nimport './App.css';\n\nimport Timer from './useTimer';\nimport TimerManager from './timerManager';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TimerManager />\n      </header>\n    </div>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}