{"version":3,"sources":["timerComponent.tsx","resultTableComponent.tsx","timerManager.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimerComponent","props","_useTimer","useTimer","expiryTimestamp","Date","autoStart","onExpire","timeup","seconds","minutes","isRunning","hours","days","pause","start","restart","resume","myRef","React","useRef","_React$useState","useState","_React$useState2","Object","slicedToArray","started","setStarted","_React$useState3","_React$useState4","cleared","setCleared","_React$useState5","_React$useState6","quizResult","setQuizResult","_React$useState7","_React$useState8","open","setOpen","startedRef","enabledRef","runningRef","current","enabled","running","time","setSeconds","getSeconds","focus","gonext","callbackOK","callbackNG","react_default","a","createElement","Fragment","type","style","height","background","border","onKeyDown","e","console","log","key","ref","Box","sx","width","color","fontSize","slice","Math","floor","Button","variant","onClick","disabled","ResultTableComponent","sxAnswerOK","sxAnswerNG","fontWeight","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","secondsList","map","index","&:last-child td, &:last-child th","answerList","callbackChangeAnswer","TimerManager","Audio","process","audioOK","audioNG","quizCount","setQuizCount","setRunning","_React$useState9","_React$useState10","_React$useState11","_React$useState12","setSecondsList","_React$useState13","_React$useState14","setAnswerList","quizOK","resultSeconds","play","incQuiz","addList","quizNG","answer","prevState","concat","toConsumableArray","Stack","direction","xs","sm","md","spacing","i","changeRunning","size","timerComponent","resultTableComponent","idx","value","App","className","timerManager","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.712be7a0.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Button } from '@mui/material';\nimport { useTimer } from 'react-timer-hook';\nimport { bgcolor } from '@mui/system';\n\ninterface callbackOKType {\n    (argv: number): void;\n};\ninterface callbackNGType {\n    (): void;\n};\n\ninterface TimerProps {\n    running: boolean;\n    enabled: boolean;\n    seconds: number;\n    callbackOK: callbackOKType;\n    callbackNG: callbackNGType;\n};\n\nconst TimerComponent = (props: TimerProps) => {\n    const {\n        seconds,\n        minutes,\n        hours,\n        days,\n        isRunning,\n        start,\n        pause,\n        resume,\n        restart,\n    } = useTimer({ expiryTimestamp: new Date(), autoStart: false, onExpire: () => timeup() });\n\n    const myRef = React.useRef<HTMLInputElement>(null!);\n\n    const [started, setStarted] = React.useState(false);\n    const [cleared, setCleared] = React.useState(false);\n    const [quizResult, setQuizResult] = React.useState(0);\n\n    const [open, setOpen] = React.useState(false);\n\n    const startedRef = React.useRef<boolean>();\n    const enabledRef = React.useRef<boolean>();\n    const runningRef = React.useRef<boolean>();\n    startedRef.current = started;\n    enabledRef.current = props.enabled;\n    runningRef.current = props.running;\n\n    if (props.running === true) {\n        if (props.enabled === true) {\n            if (started === false) {\n                const time = new Date();\n                time.setSeconds(time.getSeconds() + props.seconds);\n                restart(time);\n                setStarted(true);\n                setOpen(true);\n                myRef.current.focus();\n            }\n        }\n\n        if (cleared === false) {\n            setQuizResult(3);\n            setCleared(true);\n        }\n    }\n    else {\n        if (quizResult === 3) {\n            setQuizResult(0);\n        }\n        if (isRunning == true) {\n            pause();\n            setStarted(false);\n        }\n        if (cleared === true) {\n            setCleared(false);\n        }\n    }\n\n    const gonext = () => {\n        if (startedRef) {\n            pause();\n            setStarted(false);\n            setQuizResult(1);\n            props.callbackOK(props.seconds - (minutes * 60 + seconds));\n        }\n    }\n\n    const timeup = () => {\n        setStarted(false);\n        setQuizResult(2);\n        props.callbackNG();\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n        console.log(\"fire\")\n        if (e.key === 'Escape' && open) {\n            if (enabledRef && runningRef && startedRef) {\n                console.log(\"a\");\n                gonext();\n            }\n            setOpen(false);\n        }\n    };\n\n    return (\n        <>\n            <div>\n                <input type=\"text\" style={{height: 0, background: \"#1a2f52\", border: \"none\" }} onKeyDown={handleKeyDown} ref={myRef} />\n                {props.enabled && props.running ? (\n                    <Box sx={{ width: \"100%\" }}>\n                        <div style={{ color: quizResult === 2 ? \"red\" : \"white\" }} >\n                            {quizResult === 0 ? \"-\" : quizResult === 3 ? \"-\" : quizResult === 1 ? \"OK\" : \"NG\"}\n                        </div>\n                        <div style={{ fontSize: '100px' }}>\n                            <span>{('00' + minutes).slice(-2)}</span>:<span>{('00' + seconds).slice(-2)}</span>\n                        </div>\n                        <div style={{ fontSize: '40px', color: \"gray\" }}>\n                            <span>{('00' + (Math.floor(props.seconds / 60) - minutes)).slice(-2)}</span>:<span>{('00' + (props.seconds - seconds)).slice(-2)}</span>\n                        </div>\n                        <Button variant=\"outlined\" onClick={() => gonext()} sx={{ width: \"100%\" }}>NEXT</Button>\n                    </Box>\n                ) : (\n                    <Box sx={{ width: \"100%\" }}>\n                        <div style={{ color: quizResult === 2 ? \"red\" : \"white\" }} >\n                            {quizResult === 0 ? \"-\" : quizResult === 3 ? \"-\" : quizResult === 1 ? \"OK\" : \"NG\"}\n                        </div>\n                        {quizResult === 3 ? (\n                            <div style={{ fontSize: '100px', color: \"gray\" }}>\n                                <span>{('00' + Math.floor(props.seconds / 60)).slice(-2)}</span>:<span>{('00' + (props.seconds % 60)).slice(-2)}</span>\n                            </div>\n                        ) : (\n                            <div style={{ fontSize: '100px', color: \"gray\" }}>\n                                <span>{('00' + minutes).slice(-2)}</span>:<span>{('00' + seconds).slice(-2)}</span>\n                            </div>\n                        )}\n                        {quizResult === 3 ? (\n                            <div style={{ fontSize: '40px' }}>\n                                <span>00</span>:<span>00</span>\n                            </div>\n                        ) : (\n                            <div style={{ fontSize: '40px' }}>\n                                <span>{('00' + (Math.floor(props.seconds / 60) - minutes)).slice(-2)}</span>:<span>{('00' + (props.seconds - seconds)).slice(-2)}</span>\n                            </div>\n                        )}\n                        <Button disabled={true} variant=\"outlined\" onClick={() => gonext()} sx={{ width: \"100%\" }}>-</Button>\n                    </Box>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default TimerComponent;","import React from 'react';\n\nimport { Table, TableContainer, TableHead, TableRow, TableBody, TableCell, Paper, Button } from '@mui/material';\n\ninterface CallbackChangeAnswerType {\n    (argv: number): void;\n}\n\ninterface ResultTableProps {\n    secondsList: number[];\n    answerList: boolean[];\n    callbackChangeAnswer: CallbackChangeAnswerType\n};\n\nconst ResultTableComponent = (props: ResultTableProps) => {\n    const sxAnswerOK = {\n        color: \"black\"\n    };\n    const sxAnswerNG = {\n        color: \"red\",\n        fontWeight: \"bold\"\n    };\n\n    return (\n        <>\n            <TableContainer style={{width:\"50%\"}} component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">#</TableCell>\n                            <TableCell align=\"center\">Time</TableCell>\n                            <TableCell align=\"center\">Answer</TableCell>\n                            <TableCell align=\"center\">Change Answer</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {props.secondsList.map((seconds: number, index: number) => (\n                            <TableRow\n                                key={index}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell align=\"center\" component=\"th\" sx={ props.answerList[index] ? sxAnswerOK : sxAnswerNG } >\n                                    {\"#\" + ( '000' + ( index + 1) ).slice(-3) }\n                                </TableCell>\n                                <TableCell align=\"center\" sx={ props.answerList[index] ? sxAnswerOK : sxAnswerNG } >\n                                    { ( '00' + Math.floor(seconds / 60) ).slice( -2 ) + \":\" + ( '00' + (seconds) ).slice( -2 ) }\n                                </TableCell>\n                                <TableCell align=\"center\" sx={ props.answerList[index] ? sxAnswerOK : sxAnswerNG } >\n                                    { props.answerList[index] ? \"OK\" : \"NG\" }\n                                </TableCell>\n                                <TableCell align=\"center\" >\n                                    <Button variant=\"outlined\" onClick={() => props.callbackChangeAnswer(index)}>Change</Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}\n\nexport default ResultTableComponent;","import React from 'react';\n// import * as ExcelJS from 'exceljs';\nimport { Button, Stack } from '@mui/material';\n\nimport TimerComponent from './timerComponent';\nimport ResultTableComponent from './resultTableComponent';\n\n\ninterface resultType {\n    idx: number;\n    second: number;\n};\n\nconst audioOKUrl = process.env.PUBLIC_URL + '/audio/sound_ok.mp3';\nconst audioNGUrl = process.env.PUBLIC_URL + '/audio/sound_ng.mp3';\n\nconst TimerManager = () => {\n    const [ audioOK ] = React.useState( new Audio(audioOKUrl) );\n    const [ audioNG ] = React.useState( new Audio(audioNGUrl) );\n    const [ quizCount, setQuizCount ] = React.useState( 0 );\n    const [ running, setRunning ] = React.useState( false );\n    const [ seconds, setSeconds ] = React.useState( 30 );\n\n    const [ secondsList, setSecondsList ] = React.useState<number[]>( [] );\n    const [ answerList, setAnswerList ] = React.useState<boolean[]>( [] );\n\n    const changeRunning = () => {\n        if ( running === false )\n        {\n            setQuizCount(0);\n            setRunning(true);\n        }\n        else\n        {\n            for (let i = quizCount; i < 4; i++)\n            {\n                addList( seconds, false );\n            }\n            setQuizCount(0);\n            setRunning(false);\n        }\n    }\n\n    const quizOK = ( resultSeconds: number ) => {\n        audioOK.play();\n        incQuiz();\n        addList( resultSeconds, true );\n    }\n\n    const quizNG = () => {\n        audioNG.play();\n        incQuiz();\n        addList( seconds, false );\n    }\n\n    const incQuiz = () => {\n        if (quizCount < 3)\n        {\n            setQuizCount(quizCount + 1);\n        }\n        else\n        {\n            setQuizCount(0);\n            setRunning(false);\n        }\n    }\n\n    const addList = (seconds: number, answer: boolean) => {\n        setSecondsList( (prevState: number[]) => [...prevState, seconds] );\n        setAnswerList( (prevState: boolean[]) => [...prevState, answer] );\n    }\n\n    const changeAnswerStatus = (idx: number) => {\n        setAnswerList( (prevState: boolean[]) => prevState.map((value: boolean, index: number) => (index === idx ? !value : value)))\n    }\n    \n    const resetList = () => {\n        setSecondsList( [] );\n        setAnswerList( [] );\n    }\n\n    // const outputExcel = async() => {\n    //     const workbook = new ExcelJS.Workbook();\n\n    //     // Workbookに新しいWorksheetを追加\n    //     workbook.addWorksheet('result');\n\n    //     // ↑で追加したWorksheetを参照し変数に代入\n    //     const worksheet = workbook.getWorksheet('result');\n    //     // 列を定義\n    //     worksheet.columns = [\n    //     { header: '#', key: 'id' },\n    //     { header: 'time', key: 'time' },\n    //     { header: 'answer', key: 'answer' },\n    //     ];\n\n    //     for (let idx = 0; idx < secondsList.length; idx++)\n    //     {\n    //         worksheet.addRow({\n    //             id: ( '000' + ( idx + 1) ).slice(-3),\n    //             time: ( '00' + Math.floor(secondsList[idx] / 60) ).slice( -2 ) + \":\" + ( '00' + (secondsList[idx]) ).slice( -2 ),\n    //             answer: ( answerList[idx] ? \"OK\" : \"NG\" )\n    //         });\n    //     }\n\n    //     // UInt8Arrayを生成\n    //     const uint8Array = await workbook.xlsx.writeBuffer();\n\n    //     // filename\n    //     const now = new Date();\n    //     const filename = \n    //         'tsumeshogi_' + \n    //         now.getFullYear() + \n    //         ('00' + (now.getMonth() + 1)).slice(-2) +\n    //         ('00' + (now.getDay() + 1)).slice(-2) + \n    //         '_' +\n    //         ('00' + now.getHours()).slice(-2) +\n    //         ('00' + now.getMinutes()).slice(-2) +\n    //         '.xlsx';\n\n    //     // Blob\n    //     const blob = new Blob([uint8Array], {type: 'application/octet-binary'});\n    //     const url = window.URL.createObjectURL(blob);\n    //     const a = document.createElement('a');\n    //     a.href = url;\n    //     a.download = filename;\n    //     a.click();\n    //     // ダウンロード後は不要なのでaタグを除去\n    //     a.remove();\n    // }\n\n    return (\n        <>\n            <hr style={{width:\"90%\"}} />\n            <Stack\n                direction={{ xs: 'column', sm: 'column', md: 'row' }}\n                spacing={{ xs: 1, sm: 2, md: 4 }}\n            >\n                <Button variant=\"contained\" onClick={() => changeRunning()} size={\"large\"} >\n                    { running ? \"STOP\" : \"START\" }\n                </Button>\n                <Button disabled={ running } variant=\"contained\" onClick={() => resetList()} size={\"large\"}  >\n                    Reset\n                </Button>\n                {/* <Button disabled={ running } variant=\"contained\" onClick={() => outputExcel()} size={\"large\"}  >\n                    Download Excel\n                </Button> */}\n            </Stack>\n            <Stack\n                direction={{ xs: 'column', sm: 'column', md: 'row' }}\n                spacing={{ xs: 1, sm: 2, md: 4 }}\n            >\n                <TimerComponent \n                    running={ running }\n                    enabled={ quizCount === 0 ? true : false }\n                    seconds={ seconds }\n                    callbackOK={ quizOK }\n                    callbackNG={ quizNG }\n                />\n                <TimerComponent \n                    running={ running }\n                    enabled={ quizCount === 1 ? true : false }\n                    seconds={ seconds }\n                    callbackOK={ quizOK }\n                    callbackNG={ quizNG }\n                />\n                <TimerComponent \n                    running={ running }\n                    enabled={ quizCount === 2 ? true : false }\n                    seconds={ seconds }\n                    callbackOK={ quizOK }\n                    callbackNG={ quizNG }\n                />\n                <TimerComponent \n                    running={ running }\n                    enabled={ quizCount === 3 ? true : false }\n                    seconds={ seconds }\n                    callbackOK={ quizOK }\n                    callbackNG={ quizNG }\n                />\n            </Stack>\n            <hr style={{width:\"90%\"}} />\n            <ResultTableComponent\n                secondsList={ secondsList }\n                answerList={ answerList }\n                callbackChangeAnswer={ changeAnswerStatus }\n            />\n        </>\n    );\n}\n\nexport default TimerManager;","import React from 'react';\nimport './App.css';\n\nimport Timer from './useTimer';\nimport TimerManager from './timerManager';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TimerManager />\n      </header>\n    </div>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}